var express = require("express");
var path = require("path");
var mongoose = require('mongoose');
var app = express();

// CORS Middleware that sends HTTP headers with every request
// Allows connections from http://localhost:8081
var allowCrossDomain = function(req, res, next) {
    res.header('Access-Control-Allow-Origin', 'http://localhost:8081');
    res.header('Access-Control-Allow-Methods', 'PUT,GET,POST,DELETE,OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Content-Type,X-Requested-With');

    next();
}

// Database
// mongodb://host/dbname
mongoose.connect('mongodb://localhost/237demo');

// New mongoose schema to create our Todo model
var Schema = mongoose.Schema;
var Todo = new Schema({
	desc: { type: String, required: true }
});
var TodoModel = mongoose.model('Todo', Todo);

// Config
app.configure(function () {
  app.use(express.bodyParser());
  app.use(express.methodOverride());
  app.use(allowCrossDomain);		// Our CORS middleware
  app.use(app.router);
  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));
});

// =========== ROUTES ==========

// Get all todos
app.get('/notes', function (req, res) {
	return TodoModel.find(function(err, todos) {
		return res.send(todos);
	});
});

// Get a single todo
app.get('/notes/:id', function (req, res) {
	// pattern matches /todos/*
	// given id is passed to req.params.id
	return TodoModel.findById(req.params.id, function(err, todo) {
		res.send(todo);
	});
});

// Add a todo
app.post('/notes', function (req,res) {
	var todo = new TodoModel({
		desc: req.body.desc
	});

	// save to mongodb
	todo.save();

	// useful so client gets server generated stuff like IDs
	return res.send(todo);
});

// Delete a todo
app.delete('/notes/:id', function(req, res) {
	return TodoModel.findById(req.params.id, function(err, todo){
		return todo.remove(function(err) {
			return res.send('');
		});
	});
});

// Editing a todo
app.put('/notes/:id', function(req, res) {
	return TodoModel.findById(req.params.id, function(err, todo) {
		todo.content = req.body.content;
		todo.save();
		return res.send(todo);
	});
});

// Launch server
app.listen(8080);